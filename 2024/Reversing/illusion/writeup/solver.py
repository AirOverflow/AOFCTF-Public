from z3 import *

x = [3506868002 , 3542527462 , 3106054992 , 1250615634 , 961209986 , 3524749440 , 1748173521 , 2304148768 , 922320063]
y = [3893302130 , 1212257138 , 3504301936 , 3476729895 , 1478866023 , 4171846495 , 3230582564 , 3494877010 , 804284557]
z = [1354022296 , 3896290713 , 823521428 , 101927400 , 1799038865 , 3089123365 , 3408375811 , 3359386955 , 936104550]
result = [2013338292 , 3643337960 , 1751534901 , 2387432024 , 4206284355 , 3777020566 , 2691371045 , 1685726042 , 630665147 , 1943452866 , 3723111615 , 2688725002 , 1186917910 , 1116095036 , 2533966958 , 3849331869 , 3826093588 , 3903204169 , 2152322872 , 2424245532 , 1535477024 , 4090076233 , 326779556 , 950451249 , 1925260118 , 1119821224 , 3660956905 , 2474639220 , 1610927943 , 2902325634 , 2502066477 , 1934661818]
s= Solver()
length = 32
flag = [BitVec(f'flag{i}', 32) for i in range(length)]

s.add(x[1] ^ x[7] ^ x[0] ^ y[2] ^ (flag[0]) ^ 598268513 == result[0])
s.add(x[2] ^ x[6] ^ x[6] ^ x[3] ^ (flag[1]) ^ 713076389 == result[1])
s.add(x[0] ^ z[1] ^ y[2] ^ x[5] ^ (flag[2]) ^ 1402232888 == result[2])
s.add(y[1] ^ y[2] ^ z[6] ^ x[2] ^ (flag[3]) ^ 1691792714 == result[3])
s.add(x[3] ^ x[2] ^ x[6] ^ x[4] ^ (flag[4]) ^ 1483171910 == result[4])
s.add(z[2] ^ x[5] ^ y[2] ^ y[5] ^ (flag[5]) ^ 710176491 == result[5])
s.add(y[4] ^ z[5] ^ y[6] ^ z[5] ^ (flag[6]) ^ 952132381 == result[6])
s.add(y[7] ^ y[7] ^ y[3] ^ z[5] ^ (flag[7]) ^ 325114678 == result[7])
s.add(y[8] ^ z[0] ^ z[3] ^ x[8] ^ (flag[8]) ^ 1782173645 == result[8])
s.add(z[0] ^ y[2] ^ x[7] ^ z[3] ^ (flag[9]) ^ 2096671372 == result[9])
s.add(x[4] ^ x[4] ^ y[3] ^ y[4] ^ (flag[10]) ^ 1257580751 == result[10])
s.add(y[6] ^ z[3] ^ z[8] ^ y[8] ^ (flag[11]) ^ 2128905280 == result[11])
s.add(z[4] ^ z[4] ^ z[7] ^ z[7] ^ (flag[12]) ^ 1186917927 == result[12])
s.add(y[6] ^ z[7] ^ y[1] ^ x[6] ^ (flag[13]) ^ 1782987207 == result[13])
s.add(y[4] ^ x[3] ^ y[5] ^ y[1] ^ (flag[14]) ^ 894357829 == result[14])
s.add(y[3] ^ y[0] ^ x[4] ^ y[7] ^ (flag[15]) ^ 725677613 == result[15])
s.add(y[3] ^ x[7] ^ x[7] ^ x[3] ^ (flag[16]) ^ 1639833420 == result[16])
s.add(z[2] ^ x[8] ^ y[7] ^ y[8] ^ (flag[17]) ^ 284514441 == result[17])
s.add(x[3] ^ x[8] ^ y[3] ^ z[2] ^ (flag[18]) ^ 34933268 == result[18])
s.add(z[1] ^ x[0] ^ z[3] ^ x[1] ^ (flag[19]) ^ 2087766938 == result[19])
s.add(z[7] ^ y[0] ^ y[6] ^ y[0] ^ (flag[20]) ^ 1396141922 == result[20])
s.add(y[0] ^ x[5] ^ x[1] ^ z[3] ^ (flag[21]) ^ 484705235 == result[21])
s.add(z[7] ^ x[5] ^ y[8] ^ x[8] ^ (flag[22]) ^ 274207528 == result[22])
s.add(x[7] ^ z[8] ^ x[3] ^ z[6] ^ (flag[23]) ^ 127318600 == result[23])
s.add(x[3] ^ x[3] ^ x[1] ^ y[3] ^ (flag[24]) ^ 1859993274 == result[24])
s.add(x[7] ^ z[5] ^ y[0] ^ y[7] ^ (flag[25]) ^ 1267291319 == result[25])
s.add(z[2] ^ y[1] ^ x[1] ^ z[8] ^ (flag[26]) ^ 1200412838 == result[26])
s.add(z[7] ^ x[3] ^ z[3] ^ z[3] ^ (flag[27]) ^ 298398532 == result[27])
s.add(x[2] ^ x[7] ^ y[2] ^ y[5] ^ (flag[28]) ^ 2013715761 == result[28])
s.add(y[3] ^ z[3] ^ y[7] ^ x[5] ^ (flag[29]) ^ 1737293750 == result[29])
s.add(y[3] ^ x[6] ^ z[0] ^ y[4] ^ (flag[30]) ^ 985283085 == result[30])
s.add(z[6] ^ z[6] ^ y[2] ^ z[5] ^ (flag[31]) ^ 464500626 == result[31])
print(s.check())

counter = 0
while s.check() == sat:
    m = s.model()
    flag_1 = [chr(m[flag[i]].as_long()) if m[flag[i]] is not None else None for i in range(length)]
    for char in flag_1:
        if char:
            print(char, end="")
    print("\n")
    s.add(Or([flag[i] != m[flag[i]] for i in range(length)]))
    counter += 1

print("Total number of solutions found:", counter)
    	
    